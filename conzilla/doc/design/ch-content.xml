  <!-- $Id$ -->

  <chapter id="ch-content">
    <title>Content</title>
    
    
    <section>
      <title>&s1;</title>
      <para>
	If neurons deal with the contextual organization of
	information, it is the content that contains the information
	that we organize. While concepts deal with the inner, mental
	world, content represents the link to the outer world of text,
	images and sound; the world of media and communication. The
	activation of content is one of the most important motivations
	for the creation of context at all.
      </para>
    </section>
    
    
    <section>
      <title>&s2;</title>
      <para>
	Content consists of explanations, examples and definitions of
	concepts used in learning environments, representing different
	aspects of the concept in question. It may also consist of
	physical or digital resources that have a representation in
	the system for lexical purposes. So the definition of content
	consists of two parts:
	
	<itemizedlist>
	  <listitem>
	    <para>
	      Designing a representation of a piece of content in
	      the system. This must include meta-data on the content, such
	      as type information, and the location of digital content or
	      the identification of physical content. The idea is that you
	      should be able to search for and choose content without having
	      seen the content itself, only this description.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para>
	      Associating such a content description with a concept
	      or other type of neuron.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      
      <para>
	The ideas for the usage of content and aspects are carefully
	described in <citation>cid52</citation>, and will therefore
	not be repeated here.
      </para>
    </section>
    
    
    <section>
      <title>&s3;</title>
      <para>
	The representation in the system of a piece of external
	content is made by a database component containing only
	meta-data, including type and location information. A concept
	map, being a component and thus having meta data, is in
	contrast represented by itself.
      </para>
      
      <para>
	To allow these content descriptions to be treated as the content
	of a specific neuron, we use the <literal>relation</literal>
	meta-data entry, with a <literal>kind</literal> that equals
	<literal>content</literal>. While waiting for IMS to define
	the <literal>identifier</literal> element to be put here, we
	use an extension, <literal>location</literal>, to point to the
	component representing the content.
      </para>

      <para>
	In addition, by adding <literal>relation</literal>s with a
	<literal>kind</literal> that equals
	<literal>context</literal>, we allow the specification of
	concept maps that act as contexts for the neuron. Please note
	that concept maps may also serve as content, and that there is
	an important philosophical difference between the two.
      </para>
    </section>
    
    
    <section id="ch-content-dd">
      <title>&s4;</title>
      <section>
	<title>Adding content</title>
	<para>
	  One problem with the implemented solution is that it is
	  impossible to add content or contexts to an existing neuron
	  that you cannot modify. One could imagine doing a catalog
	  search to add content to those specified in meta-data.
	</para>
      </section>
      
      <section>
	<title>Complex content collections</title>
	<para>
	  A complex piece of content may generate large amounts of
	  content descriptions. An example is an article like this,
	  that would need one component per important section.  One
	  imaginable solution to this kind of problem is server-side
	  generation of content descriptions on the fly from their
	  identifiers, using for example XML markup in the article or
	  other means. Quite generally, it is imaginable that the
	  server stores the meta-data in a database of some sort,
	  together with the content it describes. In this case,
	  exporting the content descriptions over CORBA could be a
	  reasonable idea.
	</para>
      </section>
    </section>
  </chapter>
  
  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-default-dtd-file:"docbookx.ced"
  End:
  -->
  