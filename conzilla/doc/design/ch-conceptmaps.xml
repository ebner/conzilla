  <!-- $Id$ -->

  <chapter id="ch-conceptmaps">
    <title>Concept maps</title>
    
    
    <section>
      <title>&s1;</title>
      <para>
	A concept map is a presentation of a part of the abstract
	world of interconnected neurons. A concept map is designed to
	emphasize certain associations between certain concepts, and
	this way provide a limited view of how the neurons relate to
	each other, without adding any actual information to the
	contextual network that the neurons constitute. There are many
	sorts of views possible, but the one described here is the one
	implemented - the standard two-dimensional UML-like view.
      </para>
    </section>
    
    
    <section>
      <title>&s2;</title>
      <para>
	A concept map contains the information necessary to present
	part of the neuronal context. This results in the following
	requirements for a concept map:
	
	<itemizedlist>
	  <listitem>
	    <para>
	      It includes a number of neurons and certain of their
	      axons.
	    </para>
	  </listitem>
	
	  <listitem>
	    <para>
	      It defines positions for the visual elements that the
	      neurons consists of.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para>
	      It allows the presentation of data in the map.
	    </para>
	  </listitem>
	</itemizedlist>
	
	This is supposed to be done in a way that resembles UML as
	much as possible.
      </para>
    </section>
    
    
    <section>
      <title>&s3;</title>
      <para>
	A concept map is a component with the MIME type
	<literal>application/x-conceptmap</literal>. A
	concept map contains the following:
	
	<itemizedlist>
	  <listitem>
	    <para>
	      An IMS meta-data record as described in
	      <citation>imsmetadata</citation> (as all database
	      components have).		
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para>
	      A bounding box for the whole map, which defines the
	      coordinate system in which the rest of the coordinates are
	      given.
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      A <link linkend="ch-filters">filter</link> to use as
	      default sorting of the content of neurons. A filter
	      given in a neuron (see <link
		linkend="ch-neurons-3-filter">Neurons</link>) will override
	      this.
	    </para>
	  </listitem>
	  
	  <listitem>
	    <para>
	      A list of neurons, referred to by their identity. For
	      each neuron, a bounding box is given for the body, as
	      well as a number of points constituting the line
	      connecting the body with the axons. A title is given to
	      each neuron, as well as a list of data tags that are to
	      be displayed together with their values. Each neuron may
	      also have a so called detailed map, which is the map
	      where you land if you surf this neuron.
	    </para>
	  </listitem>
       
	  <listitem>
	    <para>
	      For each neuron listed, a list of axons that one wants
	      in the map. Each given axon is given a list of points,
	      where the last is the tip of the axon head. It is
	      supposed that all axons start at the same point,
	      although this is not enforced.
	    </para>
	  </listitem>
       
	</itemizedlist>
      </para>
    </section>
    
    
    <section id="ch-conceptmaps-dd">
      <title>&s4;</title>
      <para>
	In fact, given the structure of neurons already defined,
	defining simple concept maps is not very complicated; most
	elements are a must.
      </para>
      
      <section>
	<title></title>
	<para>
	  That given, there are problems to discuss. One could ask why
	  the detailed map is given here and not in the neuron itself.
	  There are two reasons for this. First, this would constitute a
	  breakage to the separation between the neuronal network and
	  the presentation level (which may be replaced by other types
	  of maps). The second reason is that which map one wants to
	  link to actually is very dependent of which map one is
	  regarding. Still, this should not stop us from considering
	  placing a preferred detailed map in the meta-data of a neuron,
	  as a sort of <quote>primary context</quote>.
	</para>      
      </section>
      
      <section>
	<title>Double occurences</title>
	<para>
	  The implementation allows the same neuron to appear several
	  times in the map. This feature is relatively new, but the
	  need has been felt from early on in complex concept maps,
	  where the otherwise resulting mess of axons is not pleasant.
	  An axon thus points to only one of these appearances.
	</para>

	<para>
	  Note that the identifier given to each axon in a neuron (as
	  described in <xref linkend="ch-neurons-arch"/>) allows us to
	  have several axons of the same type pointing to the same
	  neuron. This will result in user interface troubles, when
	  having to choose an axon to show in a map. It is expected
	  that the vast majority of neurons will not use this feature,
	  and that an axon type and the pointed-to neuron will usually
	  uniquely identify an axon in a neuron, which is a natural
	  way of identification. The exceptions will most likely
	  mainly be machine-generated listings with double occurences
	  such as histories etc.
	</para>

      </section>
      
      <section>
	<title>Contained neurons</title>
	<para>
	  It has been discussed that one should allow concept maps to
	  contain neurons. This would mean that one would not need to
	  give very simple neurons definitive identities, as long as
	  they are only used inside the map, and that one could
	  distribute certain maps in an XML file, completely
	  self-contained.
	</para>
	
	<para>
	  The neuron could, in this case, be referred to with the help
	  of a <quote>fragment identifier</quote>, which are introduced
	  with the character <literal>#</literal> (see  
	  <citation>rfcuri</citation>).
	</para>
      </section>
    </section>
  </chapter>
  
  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-default-dtd-file:"docbookx.ced"
  End:
  -->
  