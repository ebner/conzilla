  <!-- $Id$ -->

  <chapter id="ch-externalcoop">
    <title>External Cooperation</title>
    
    
    <section>
      <title>&s1;</title>
      <para>
	The Conzilla browser does not operate alone. Instead, it
	depends on external tools for, notably, the displaying of
	content. This interaction must not necessarily be limited to
	just one direction. Instead, by allowing the content to
	interact with the browser we lift Conzilla to a whole new
	level of interactivity and enable many intriguing possiblities.
      </para>
    </section>
    
    
    <section>
      <title>&s2;</title>
      <para>
	The reason why interacting with content could be interesting
	is explained by the example of the current article. The
	concept maps describing this article will have sections of the
	article as content. The text in these sections will contain
	hypertext links to other parts of the article. But when using
	these hyperlinks, the context described in Conzilla will not
	automatically be updated to show the context of the link
	end. Thus, it would be desirable to be able to either
	automatically update the context when following a link, or to
	have a button such as <quote>Show context</quote> in the
	article display that shows the context of the current text.
	This would demand that Conzilla be controllable using, for
	example, JavaScript.
      </para>

      <para>
	It should be clear that allowing this type of manipulation of
	context from inside of content could be immensely useful when
	navigating complexly interlinked content collections, which is
	probably not at all going to be an unusual case.
      </para>
      
      <para>
	The requirements on Conzilla for it to be able to interact
	with external tools include:

	<itemizedlist>
	  <listitem>
	    <para>
	      It has to have a standardized interface. Note that the
	      specification of this interface may very well have be
	      made completely concept browser independent, as content
	      is not supposed to know which browser the user is
	      using. This places strong demands on the interface, which
	      must be carefully designed to meet the following
	      criteria:

	      <itemizedlist>
		<listitem>
		  <para>
		    It must not be dependent on Java specific features
		    or types or features specific to the Conzilla browser.
		  </para>
		</listitem>

		<listitem>
		  <para>
		    It must be able to perform the fundamental tasks
		    of concept map browsing, which include surfing to
		    a given map, showing a given content, etc. The
		    details of this functionality is not yet clear.
		  </para>
		</listitem>
	      </itemizedlist>
	    </para>
	  </listitem>

	  <listitem>
	    <para>
	      There must be a means to locate Conzilla and the
	      interface. This includes specifically from inside of
	      content, where at all possible.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </section>
    
    
    <section>
      <title>&s3;</title>
      <para>
	None of this functionality has really been implemented, even
	though there has gone some thinking into the <link
	linkend="ch-browser-mapcontroller">map controller</link>
	interface, which makes it probable that this class will serve
	as model for the external interface.
      </para>
    </section>
    
    
    <section>
      <title>&s4;</title>

      <para>
	It must be noted that already, the Java classes are usable
	from inside a browser using either Java or JavaScript. It has
	been demonstrated that a small piece of JavaScript is able to
	control the browser. The interface is, however, not yet clean enough.
      </para>

      <para>
	The external interface will probably be designed in at least
	two ways: in Java, to be used from inside a browser, and in
	CORBA, for general external use.
      </para>

      <para>
	Possibly, we will implement support for content displaying
	using the <ulink url="http://www.mozilla.org/">Mozilla</ulink>
	browser. We will be able to embed Mozilla into Conzilla, and
	the other way around, use Conzilla as displayer of concept
	maps in HTML pages, allowing interaction between Conzilla, the
	embedded Mozilla, and the concept map displayer inside
	Mozilla.
      </para>

    </section>
  </chapter>
  
  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-default-dtd-file:"docbookx.ced"
  End:
  -->
  